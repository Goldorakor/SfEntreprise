{% extends 'base.html.twig' %}

{% block title %}Ajouter une entreprise{% endblock %}

{% block body %}

    {# on crée une condition en fonction de la variable edit (booléen) qui provient du controller EntrepriseController, dans la fonction new_edit() #} 
    {% if edit %}
        <h1>Editer une entreprise</h1>
    {% else %}
        <h1>Ajouter une entreprise</h1>
    {% endif %}
    

    {# {{ form(form) }} : ancienne syntaxe ambigue #} 
    {# {{ form(formAddEntreprise) }} #}



    {{ form_start(formAddEntreprise) }}

        {{ form_row(formAddEntreprise.raisonSociale) }}
        {{ form_row(formAddEntreprise.dateCreation) }}
        

        <div class="row">
            <div class="col-sm">
                {{ form_row(formAddEntreprise.adresse) }}
            </div>
            <div class="col-sm">
                {{ form_row(formAddEntreprise.codePostal) }}
            </div>
            <div class="col-sm">
                {{ form_row(formAddEntreprise.ville) }}
            </div>
        </div>
        
        {{ form_row(formAddEntreprise.valider) }}


    {{ form_end(formAddEntreprise) }}

    
{#

https://symfony.com/doc/current/forms.html#rendering-forms 

 templates/task/new.html.twig 
{{ form(form) }} -> risque de confusion avec la syntaxe form*1(form*2) 
form*1 est le nom de la fonction qui permet de récupérer le formulaire (fonction à appeler pour rendre le formulaire visible) 
l'argument form*2 dedans est le nom de la variable qui provient du controller entreprise dans la public function new() : 'form' => $form,

on va donc changer le nom de la variable dans le EntrepriseController pour éviter toute ambiguité : 'form' -> 'formAddEntreprise'

#}


{% endblock %}


